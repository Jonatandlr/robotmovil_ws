<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot name="Pablo">
  <link name="base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="-0.002876 -0.00013597 -0.085753"/>
      <mass value="2.4215"/>
      <inertia ixx="0.021858680" ixy="0.0" ixz="0.010020353" iyy="0.078572349" iyz="-0.0" izz="0.091971324"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/base_link.STL"/>
      </geometry>
      <material name="naranjitabrillante">
        <color rgba="1 0.5 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/base_link.STL"/>
      </geometry>
    </collision>
  </link>
  <!-- 
  <gazebo>
  <mu1>200</mu1>
  <mu2>200</mu2>
  <kp>1000000</kp>
  <kd>1</kd>
  <material>Gazebo/Yellow</material>  

  </gazebo>-->
  <link name="wheel_left_link">
    <inertial>
      <origin rpy="0 0 0" xyz="1.3352E-09 8.1843E-10 0.020002"/>
      <mass value="0.26047"/>
      <inertia ixx="0.00008929863" ixy="0" ixz="0" iyy="0.000168983" iyz="0" izz="0.00008929863"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheel_left_link.STL"/>
      </geometry>
      <material name="negro">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheel_left_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <origin rpy="-1.5708 0 0" xyz="-0.091483 0.14579 -0.185"/>
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="200" velocity="200"/>
    <dynamics damping="0.001" friction="0.00001"/>
  </joint>
  <link name="wheel_right_link">
    <inertial>
      <origin rpy="0 0 0" xyz="-1.2885E-09 8.9862E-10 -0.020002"/>
      <mass value="0.26047"/>
      <inertia ixx="0.00008929863" ixy="0" ixz="0" iyy="0.000168983" iyz="0" izz="0.00008929863"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheel_right_link.STL"/>
      </geometry>
      <material name="negro">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheel_right_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <origin rpy="1.5708 0 3.1416" xyz="-0.091483 -0.14621 -0.185"/>
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="200" velocity="200"/>
    <dynamics damping="0.001" friction="0.00001"/>
  </joint>
  <link name="base_castor_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 -2.08166817117217E-16 0.0141762813814508"/>
      <mass value="0.0128281265837759"/>
      <inertia ixx="0.000008221" ixy="0" ixz="0" iyy="0.000013003" iyz="0" izz="0.000008221"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/base_castor_link.STL"/>
      </geometry>
      <material name="rojo">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/base_castor_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_castor_joint" type="continuous">
    <origin rpy="3.1416 0 0" xyz="0.11102 -0.00020838 -0.18058"/>
    <parent link="base_link"/>
    <child link="base_castor_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="200" velocity="200"/>
    <dynamics damping="0.001" friction="0.00001"/>
  </joint>
  <link name="wheel_castor_link">
    <inertial>
      <origin rpy="0 0 0" xyz="5.67686175845239E-11 -2.52227516650549E-10 -2.34009084454558E-05"/>
      <mass value="0.0459793119455567"/>
      <inertia ixx="0.000004" ixy="0" ixz="0" iyy="0.000004" iyz="0" izz="0.00001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheel_castor_link.STL"/>
      </geometry>
      <material name="negro">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheel_castor_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_castor_joint" type="continuous">
    <origin rpy="1.5399 -1.5708 0" xyz="0 0 0.039416"/>
    <parent link="base_castor_link"/>
    <child link="wheel_castor_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="200" velocity="200"/>
    <dynamics damping="0.001" friction="0.00001"/>
  </joint>


  <!-- Gazebo Configuration -->
  
  <gazebo reference="base_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Yellow</material>  
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Yellow</material>  
  </gazebo>
  <gazebo reference="wheel_right_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Yellow</material>  
  </gazebo>

  <gazebo reference="base_castor_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Yellow</material>  
  </gazebo>

  <gazebo reference="wheel_castor_link">
    <mu1>1</mu1>
    <mu2>1</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Yellow</material>  
  </gazebo>


  <gazebo>
    <plugin name="two_wheeled_robot_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <updateRate>100</updateRate>
      
      <!-- wheels -->
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
 
      <!-- kinematics -->
      <wheelSeparation>0.294</wheelSeparation>
      <wheelDiameter>0.08</wheelDiameter>
 
      <!-- limits -->
      <wheelTorque>20</wheelTorque>
      <maxWheelTorque>20</maxWheelTorque>
      <wheelAcceleration>20.0</wheelAcceleration>
 
      <!-- Receive velocity commands on this ROS topic -->
      <commandTopic>cmd_vel</commandTopic>
 
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
 
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->  
      <publishOdomTF>true</publishOdomTF>
     
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->  
      <publishWheelTF>true</publishWheelTF>
 
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom_link</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelJointState>true</publishWheelJointState>
 
      <odometrySource>1</odometrySource>
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_joint_state_publisher"
        filename="libgazebo_ros_joint_state_publisher.so">
        <updateRate>100</updateRate>
        <joint_name>base_castor_joint</joint_name>
        <joint_name>wheel_castor_joint</joint_name>
    </plugin>
  </gazebo>

</robot>